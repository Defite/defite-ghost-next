@import url('https://fonts.googleapis.com/css2?family=Merriweather:wght@900&family=Raleway:ital,wght@0,400;0,500;0,600;0,700;0,800;1,400;1,700&display=swap');

:root {
  --post-header-height: 300px;
}

html {
  @apply antialiased;
  scroll-behavior: smooth;
}

/* Freeze! ðŸš” */
body.freeze {
  /* position: fixed; */
  overflow: hidden;
}

/* Content grid
/* ---------------------------------------------------------- */

/* Canvas creates a multi-column, centered grid which the post
is laid out on top of. Canvas just defines the grid, we don't
use it for applying any other styles. */

.gh-canvas {
  display: grid;
  grid-template-columns:
      [full-start]
      minmax(max(4vmin, 20px), auto)
          [wide-start]
          minmax(auto, 240px)
              [main-start]
                  min(720px, calc(100% - max(8vmin, 40px)))
              [main-end]
          minmax(auto, 240px)
          [wide-end]
      minmax(max(4vmin, 20px), auto)
      [full-end]
;
}

.gh-canvas img,
.gh-canvas video {
  max-width: 100%;
  height: auto;
}

.gh-canvas > * {
  grid-column: main-start / main-end;
}

.kg-width-wide {
  grid-column: wide-start / wide-end;
}

.kg-width-full {
  grid-column: full-start / full-end;
}

.kg-width-full img {
  width: 100%;
}

.article-body .kg-card+:not(.kg-card):not([id]),
.article-body :not(.kg-card):not([id])+.kg-card {
    @apply mt-10;
}
.article-body figcaption {
  @apply text-gray-500;
  @apply text-base;
  @apply text-center;
}

.article-body>[id]:not(:first-child) {
  @apply mt-14;
  @apply text-3xl;
}

.article-body>*+* {
  @apply mt-6;
}

.article-body>[id]+* {
  @apply mt-6;
}

.article-body p > code {
  font: inherit;
  background-color: #F5F5F5;
  color: #7F7F7F;
  padding: 6px;
  border-radius: 5px;
  display: inline-block;
  line-height: 1;
}

/*
* Post
*/
.post-template {
  @apply lining-nums;
}

.gh-article .gh-feature-image {
  grid-column: full-start / full-end;
}

.gh-article .gh-feature-image figcaption {
  @apply text-gray-500;
  @apply text-base;
  @apply mt-1;
  @apply text-center;
}

.gh-article .gh-feature-image img {
  width: 100%;
  height: 300px;
  object-fit: cover;
}

.gh-article .gh-header-inner > *,
.gh-article .gh-header-inner .gh-title,
.gh-article .gh-header-inner .gh-excerpt {
  color: white;
}

.article-body h1,
.article-body h2,
.article-body h3,
.article-body h4,
.article-body h5,
.article-body h6 {
  @apply font-bold;
}

/* Without cover image */

.gh-article.no-image .gh-header {
  @apply pt-24;
  @apply pb-10;
}

.gh-article.no-image .gh-header::before {
  display: none;
}

.gh-article.no-image .gh-header-inner .gh-post-meta,
.gh-article.no-image .gh-header-inner .gh-excerpt {
  @apply text-gray-500;
}

.gh-article.no-image .gh-header-inner .gh-title {
  @apply text-gray-800;
}

.gh-article.no-image .gh-header-inner {
  position: relative;
  top: 0;
}

.kg-card.kg-embed-card {
  position: relative;
  padding-top: 56.25%; /* 16:9 */
}

.kg-card.kg-embed-card > iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.article-body > blockquote:not([class]) {
  position: relative;
  font-style: italic;
  padding: 0;
  margin: 1.5rem 0;
}

.article-body > blockquote:not([class])::before {
  content: "";
  position: absolute;
  left: -1.5em;
  top: 0;
  bottom: 0;
  width: 4px;
  background: var(--ghost-accent-color);
}

.article-body .kg-bookmark-title {
  @apply text-base;
}

.article-body .kg-bookmark-description {
  @apply text-sm;
}

.article-body .kg-bookmark-metadata {
  @apply text-sm;
}

.gh-article .article-body hr {
  @apply w-full;

  padding: 0;
  height: 1px;
  border: 0;
  border-top: 1px solid #f0f0f0;
}

/* Prism */
.code-toolbar {
  position: relative;
}

button.copy-to-clipboard-button {
  font-size: 0;
  position: absolute;
  top: 1.5rem;
  right: 1rem;
  width: 24px;
  height: 24px;
}

button.copy-to-clipboard-button:hover {
  @apply bg-white;
}

button[data-copy-state="copy"] {
  @apply bg-white/40;
  mask-image: url('/copy.svg');
  mask-repeat: no-repeat;
  mask-position: 100% 100%;
}

button[data-copy-state="copy-success"],
button[data-copy-state="copy-success"]:hover {
  @apply bg-green-400;
  mask-image: url('/copy-success.svg');
  mask-repeat: no-repeat;
  mask-position: 100% 100%;
}